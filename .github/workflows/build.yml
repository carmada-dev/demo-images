
name: FACTORY-DISPATCH

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * *' # every day at midnight
  workflow_dispatch:
    
jobs:
  prepare:
    if: ${{ !contains(github.event.head_commit.message, '#NOCI') }}
    runs-on: ubuntu-latest

    outputs:
      imageMatrix: ${{ steps.set-imageMatrix.outputs.matrix }}
      imageVersion: ${{ steps.set-imageVersion.outputs.version }}

    steps:

      - name: Download Source
        uses: actions/checkout@v4

      - name: Generate Image Matrix
        id: set-imageMatrix
        run: |
          echo "matrix=$(find . -type f -name 'image.json' | sed -r 's|/[^/]+$||' | sort -u | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT      
          cat $GITHUB_OUTPUT

      - name: Generate Image Version
        id: set-imageVersion
        run: |
          echo "version=$(date -u +'%Y.%m%d.%H%M')" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  dispatch:
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      actions: write

    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.prepare.outputs.imageMatrix) }} 

    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.image }}

    steps:

      - name: Download Source
        uses: actions/checkout@v4

      - name: Resolve Image Name
        id: image
        run: |
          echo "imageName=$(basename "${{ matrix.image }}")" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - name: Trigger Image Build
        uses: actions/github-script@v7
        with:
          debug: true
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build-image.yml',
              ref: 'main',
              inputs: {
                imageName: '${{ steps.image.outputs.imageName }}',
                imageVersion: '${{ needs.prepare.outputs.imageVersion }}'
              },
            })

  
